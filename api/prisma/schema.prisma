generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DB_URL")
}

model users {
    id         String     @id @default(uuid()) @db.VarChar(255)
    name       String     @db.VarChar(255)
    role       UserRole   @default(USER)
    type       UserType   @default(INDIVIDUAL)
    status     UserStatus @default(PENDING)
    metadata   Json?      @db.Json
    created_at DateTime   @default(now()) @db.Timestamp(0)
    updated_at DateTime?  @db.Timestamp(0)

    accounts user_accounts[]

    @@index([created_at])
    @@index([updated_at])
    @@index([role])
    @@index([type])
}

model user_accounts {
    id            String          @id @default(uuid()) @db.VarChar(255)
    user_id       String          @db.VarChar(255)
    name          String          @db.VarChar(255)
    email         String          @unique @db.VarChar(255)
    phone         String?         @db.VarChar(255)
    role          UserAccountRole @default(MEMBER)
    status        UserStatus      @default(ACTIVE)
    hash          String          @db.VarChar(255)
    timezone      String?         @db.VarChar(255)
    notifications Boolean         @default(true)
    created_at    DateTime        @default(now()) @db.Timestamp(0)
    updated_at    DateTime?       @db.Timestamp(0)

    user_sessions user_sessions[]
    user          users           @relation(fields: [user_id], references: [id], onDelete: Cascade)

    @@index([user_id])
    @@index([created_at])
    @@index([updated_at])
    @@index([role])
    @@index([email])
}

model user_sessions {
    id         String    @id @default(uuid()) @db.VarChar(255)
    account_id String    @db.VarChar(255)
    token      String    @unique @db.VarChar(255)
    ip         String?   @db.VarChar(255)
    country    String?   @db.VarChar(255)
    org        String?   @db.VarChar(255)
    agent      String?   @db.VarChar(255)
    expires_at DateTime  @db.Timestamp(0)
    created_at DateTime  @default(now()) @db.Timestamp(0)
    updated_at DateTime? @db.Timestamp(0)

    account user_accounts @relation(fields: [account_id], references: [id], onDelete: Cascade)

    @@index([account_id])
    @@index([expires_at])
    @@index([created_at])
    @@index([updated_at])
}

enum UserStatus {
    ACTIVE
    INACTIVE
    SUSPENDED
    PENDING
    DELETED
}

enum UserRole {
    USER
    ADMIN
}

enum UserType {
    COMPANY
    INDIVIDUAL
}

enum UserAccountRole {
    OWNER
    ADMIN
    MEMBER
}
